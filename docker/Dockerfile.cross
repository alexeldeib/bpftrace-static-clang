# name the portage image
FROM gentoo/portage:latest as portage

# image is based on stage3-amd64
FROM gentoo/stage3-amd64:latest as builder

# copy the entire portage volume in
COPY --from=portage /var/db/repos/gentoo /var/db/repos/gentoo

ARG overlay_ref
ARG bcc_ref
ARG bpftrace_ref
ARG cross_target
ARG SUFFIX
ARG ARCH=amd64
ARG MICROARCH=amd64
ARG DIST="https://ftp-osl.osuosl.org/pub/gentoo/releases/${ARCH}/autobuilds"
ARG SIGNING_KEY="0xBB572E0E2D182910"

# Sandboxes removed so we don't need ptrace cap for builds

RUN mkdir -p /var/db/repos/crossdev/{profiles,metadata} && \
    echo 'crossdev' > /var/db/repos/crossdev/profiles/repo_name && \
    echo 'masters = gentoo' > /var/db/repos/crossdev/metadata/layout.conf && \
    chown -R portage:portage /var/db/repos/crossdev

RUN mkdir -p /etc/portage/repos.conf && \
    echo -e "[crossdev]\nlocation = /var/db/repos/crossdev\npriority = 100\n" >> /etc/portage/repos.conf/crossdev.conf

RUN emerge -v crossdev

RUN crossdev --stable -t $cross_target

RUN STAGE3PATH="$(wget -O- "${DIST}/latest-stage3-${MICROARCH}${SUFFIX}.txt" | \
   tail -n 1 | cut -f 1 -d ' ')"  && \
   echo "STAGE3PATH:" $STAGE3PATH && \
   STAGE3="$(basename ${STAGE3PATH})" && \
   wget -q "${DIST}/${STAGE3PATH}" \
     "${DIST}/${STAGE3PATH}.CONTENTS" "${DIST}/${STAGE3PATH}.DIGESTS.asc" && \
   tar xpf "${STAGE3}" --xattrs --numeric-owner -C /usr/$cross_target && \
   ( sed -i -e 's/#rc_sys=""/rc_sys="docker"/g' \
     /usr/$cross_target etc/rc.conf 2>/dev/null || true ) && \
   echo 'UTC' > etc/timezone && \
   rm ${STAGE3}.DIGESTS.asc ${STAGE3}.CONTENTS ${STAGE3}


RUN $cross_target-emerge -qv dev-vcs/git dev-util/cmake

# Build static libs for libelf and zlib
RUN $cross_target-emerge -qv dev-libs/elfutils
RUN $cross_target-emerge -qv sys-libs/zlib

## Add the custom overlay for clang ebuild with libclang.a, and build llvm
## and clang without SHARED=on
#RUN git clone https://github.com/dalehamel/bpftrace-static-deps.git \
#    /var/db/repos/localrepo && cd /var/db/repos/localrepo && \
#    git reset --hard  $overlay_ref
#
#RUN mkdir -p /etc/portage/repos.conf && \
#    echo -e "[localrepo]\nlocation = /var/db/repos/localrepo\npriority = 100\n" >> /etc/portage/repos.conf/localrepo.conf
#
## Install LLVM and build custom clang
#RUN emerge -v sys-devel/llvm::localrepo
#RUN emerge -v sys-devel/clang::localrepo
#
## Indicate to cmake the correct locations of clang/llvm cmake configs
#ENV LLVM_DIR=/usr/lib/llvm/8/lib64/cmake/llvm
#ENV Clang_DIR=/usr/lib/llvm/8/lib64/cmake/clang
#
## Build BCC and install static libs
#RUN mkdir -p /src && git clone https://github.com/iovisor/bcc /src/bcc
#WORKDIR /src/bcc
#RUN git reset --hard ${bcc_ref} && mkdir build && cd build && \
#    cmake -DCMAKE_INSTALL_PREFIX=/usr/local ../ && \
#    make -j$(nproc) && make install && \
#    cp src/cc/libbcc.a /usr/local/lib64/libbcc.a && \
#    cp src/cc/libbcc-loader-static.a /usr/local/lib64/libbcc-loader-static.a && \
#    cp ./src/cc/libbcc_bpf.a /usr/local/lib64/libbpf.a
#
## Build bpftrace
## Currently hacked to post-process link.txt manually until the correct
## cmake incantations can be worked in, this is to serve as a proof of concept
## build. To properly do this, bpftrace's cmake should target llvm and clang.
#RUN mkdir -p /src && git clone https://github.com/iovisor/bpftrace /src/bpftrace
#WORKDIR /src/bpftrace
#RUN git reset --hard ${bpftrace_ref} && \
#    sed -i 's/-static/-static-libgcc -static-libstdc++/g' CMakeLists.txt\
#    && mkdir build && cd build && \
#    cmake -DCMAKE_BUILD_TYPE="Release" -DSTATIC_LINKING:BOOL=ON \
#          -DBUILD_TESTING=OFF ../ && \
#    llvmlibs=$(ls -1 /usr/lib/llvm/8/lib64/*.a | tr '\n' ' ') && \
#    glibc_statics="-Wl,-Bstatic -lz -lrt -ldl -lpthread" && \
#    glibc_dynamic="-lpthread -ldl -Wl,-Bstatic -lz -lrt" && \
#    sed -i "s|-Wl,-Bdynamic /usr/lib/llvm/8/lib64/libLLVM-8.so|${llvmlibs}|g" \
#      src/CMakeFiles/bpftrace.dir/link.txt && \
#    sed -i "s|${glibc_statics}|${glibc_dynamic}|g" \
#      src/CMakeFiles/bpftrace.dir/link.txt && \
#    sed -i "s|-lelf|/usr/lib64/libelf.a|g" \
#      src/CMakeFiles/bpftrace.dir/link.txt && \
#    sed -i "s|-lclang|/usr/lib/llvm/8/lib64/libclang.a|g" \
#      src/CMakeFiles/bpftrace.dir/link.txt && \
#    make -j$(nproc) && make install
#
#
#FROM ubuntu:disco
#
#COPY --from=builder /usr/local/bin/bpftrace /usr/bin/bpftrace

